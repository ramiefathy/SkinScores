rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() {
      return request.auth != null;
    }

    function isAdmin() {
      return isSignedIn() && request.auth.token.role == 'admin';
    }

    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    match /users/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow create: if isOwner(userId);
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();
    }

    match /scoreSessions/{sessionId} {
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
      allow get, list: if isOwner(resource.data.userId) || isAdmin();
      allow update: if isOwner(resource.data.userId) && request.resource.data.userId == request.auth.uid;
      allow delete: if isOwner(resource.data.userId) || isAdmin();
    }

    match /scoreResults/{resultId} {
      allow create: if isAdmin();
      allow get, list: if isOwner(resource.data.userId) || isAdmin();
      allow update, delete: if false;
    }

    match /patients/{patientId} {
      allow create: if isSignedIn() && request.resource.data.ownerUserId == request.auth.uid;
      allow get, list: if isOwner(resource.data.ownerUserId) || isAdmin();
      allow update: if isOwner(resource.data.ownerUserId) || isAdmin();
      allow delete: if isOwner(resource.data.ownerUserId) || isAdmin();
    }
  }
}
